{"version":3,"sources":["index.tsx"],"names":["rtl","I18nManager","isRTL","DOUBLE_TAP_SCALE","MAX_SCALE","SPACE_BETWEEN_IMAGES","useVector","x1","y1","x","y","snapPoint","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter","defaultRenderImage","item","setImageDimensions","e","height","h","width","w","nativeEvent","source","uri","StyleSheet","absoluteFillObject","springConfig","damping","mass","stiffness","restDisplacementThreshold","restSpeedThreshold","ResizableImage","React","memo","translateX","index","isFirst","isLast","currentIndex","renderItem","onSwipeToClose","onTap","onDoubleTap","onLongPress","onPanStart","onScaleStart","onScaleEnd","emptySpaceWidth","doubleTapScale","doubleTapInterval","maxScale","pinchEnabled","swipeEnabled","doubleTapEnabled","disableTransitionOnScaledImage","hideAdjacentImagesOnScaledImage","disableVerticalSwipe","disableSwipeUp","loop","length","onScaleChange","onScaleChangeRange","onTranslationYChange","setRef","CENTER","offset","scale","translation","origin","adjustedFocal","originalLayout","layout","isActive","scaleReaction","start","end","setAdjustedFocal","focalX","focalY","resetValues","animated","getEdgeX","newWidth","isNaN","clampY","newScale","newHeight","clampX","getEdgeY","onStart","getPosition","i","getIndexFromPosition","position","round","currentScale","tx","translateIndex","diff","reset","imgLayout","itemProps","scaleOffset","pinchGesture","Gesture","Pinch","enabled","onUpdate","s","numberOfPointers","nextScale","onEnd","sc","nextTransX","nextTransY","diffX","moved","diffY","isVertical","initialTranslateX","shouldClose","isMoving","ty","prevTy","panGesture","Pan","minDistance","maxPointers","onBegin","velocityY","velocityX","translationX","translationY","clampedX","transX","disabledTransition","moveX","edgeY","destY","edgeX","some","snapPoints","_","snapTo","nextIndex","clamp","moveTo","interruptedScroll","tapGesture","Tap","numberOfTaps","maxDistance","doubleTapGesture","maxDelay","longPressGesture","LongPress","containerAnimatedStyle","zIndex","transform","animatedStyle","isNextForLast","isPrevForFirst","translateY","Race","Simultaneous","Exclusive","styles","itemContainer","GalleryComponent","data","initialIndex","numToRender","onIndexChange","style","keyExtractor","containerDimensions","eventsCallbacks","ref","windowDimensions","dimensions","isLoop","setIndex","refs","itemIndex","current","changeIndex","newIndex","forEach","itemRef","container","rowContainer","outOfLoopRenderRange","hidden","id","key","_id","Gallery","forwardRef","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  I18nManager,\n  Image,\n  StyleSheet,\n  useWindowDimensions,\n  ViewStyle,\n} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n  withDecay,\n  useAnimatedReaction,\n  runOnJS,\n  withSpring,\n  cancelAnimation,\n} from 'react-native-reanimated';\nimport {\n  Gesture,\n  GestureDetector,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\nimport {\n  clamp,\n  withDecaySpring,\n  withRubberBandClamp,\n  resizeImage,\n} from './utils';\n\nconst rtl = I18nManager.isRTL;\n\nconst DOUBLE_TAP_SCALE = 3;\nconst MAX_SCALE = 6;\nconst SPACE_BETWEEN_IMAGES = 40;\n\ntype Dimensions = {\n  height: number;\n  width: number;\n};\n\nexport const useVector = (x1 = 0, y1?: number) => {\n  const x = useSharedValue(x1);\n  const y = useSharedValue(y1 ?? x1);\n  return { x, y };\n};\n\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  'worklet';\n  const point = value + 0.25 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n\nexport type RenderItemInfo<T> = {\n  index: number;\n  item: T;\n  setImageDimensions: (imageDimensions: Dimensions) => void;\n};\n\nconst defaultRenderImage = ({\n  item,\n  setImageDimensions,\n}: RenderItemInfo<any>) => {\n  return (\n    <Image\n      onLoad={(e) => {\n        const { height: h, width: w } = e.nativeEvent.source;\n        setImageDimensions({ height: h, width: w });\n      }}\n      source={{ uri: item }}\n      resizeMode=\"contain\"\n      style={StyleSheet.absoluteFillObject}\n    />\n  );\n};\n\ntype EventsCallbacks = {\n  onSwipeToClose?: () => void;\n  onTap?: () => void;\n  onDoubleTap?: (toScale: number) => void;\n  onLongPress?: () => void;\n  onScaleStart?: (scale: number) => void;\n  onScaleEnd?: (scale: number) => void;\n  onPanStart?: () => void;\n  onTranslationYChange?: (translationY: number, shouldClose: boolean) => void;\n};\n\ntype RenderItem<T> = (\n  imageInfo: RenderItemInfo<T>\n) => React.ReactElement | null;\n\ntype Props<T> = EventsCallbacks & {\n  item: T;\n  index: number;\n  isFirst: boolean;\n  isLast: boolean;\n  translateX: Animated.SharedValue<number>;\n  currentIndex: Animated.SharedValue<number>;\n  renderItem: RenderItem<T>;\n  width: number;\n  height: number;\n  length: number;\n\n  emptySpaceWidth: number;\n  doubleTapInterval: number;\n  doubleTapScale: number;\n  maxScale: number;\n  pinchEnabled: boolean;\n  swipeEnabled: boolean;\n  doubleTapEnabled: boolean;\n  disableTransitionOnScaledImage: boolean;\n  hideAdjacentImagesOnScaledImage: boolean;\n  disableVerticalSwipe: boolean;\n  disableSwipeUp?: boolean;\n  loop: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n\n  setRef: (index: number, value: ItemRef) => void;\n};\n\nconst springConfig = {\n  damping: 800,\n  mass: 1,\n  stiffness: 250,\n  restDisplacementThreshold: 0.02,\n  restSpeedThreshold: 4,\n};\n\ntype ItemRef = { reset: (animated: boolean) => void };\n\nconst ResizableImage = React.memo(\n  <T extends any>({\n    item,\n    translateX,\n    index,\n    isFirst,\n    isLast,\n    currentIndex,\n    renderItem,\n    width,\n    height,\n    onSwipeToClose,\n    onTap,\n    onDoubleTap,\n    onLongPress,\n    onPanStart,\n    onScaleStart,\n    onScaleEnd,\n    emptySpaceWidth,\n    doubleTapScale,\n    doubleTapInterval,\n    maxScale,\n    pinchEnabled,\n    swipeEnabled,\n    doubleTapEnabled,\n    disableTransitionOnScaledImage,\n    hideAdjacentImagesOnScaledImage,\n    disableVerticalSwipe,\n    disableSwipeUp,\n    loop,\n    length,\n    onScaleChange,\n    onScaleChangeRange,\n    onTranslationYChange,\n    setRef,\n  }: Props<T>) => {\n    const CENTER = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    const offset = useVector(0, 0);\n\n    const scale = useSharedValue(1);\n\n    const translation = useVector(0, 0);\n\n    const origin = useVector(0, 0);\n\n    const adjustedFocal = useVector(0, 0);\n\n    const originalLayout = useVector(width, 0);\n    const layout = useVector(width, 0);\n\n    const isActive = useDerivedValue(() => currentIndex.value === index, [\n      currentIndex,\n      index,\n    ]);\n\n    useAnimatedReaction(\n      () => {\n        return scale.value;\n      },\n      (scaleReaction) => {\n        if (!onScaleChange) {\n          return;\n        }\n\n        if (!onScaleChangeRange) {\n          runOnJS(onScaleChange)(scaleReaction);\n          return;\n        }\n\n        if (\n          scaleReaction > onScaleChangeRange.start &&\n          scaleReaction < onScaleChangeRange.end\n        ) {\n          runOnJS(onScaleChange)(scaleReaction);\n        }\n      }\n    );\n\n    const setAdjustedFocal = ({\n      focalX,\n      focalY,\n    }: Record<'focalX' | 'focalY', number>) => {\n      'worklet';\n      adjustedFocal.x.value = focalX - (CENTER.x + offset.x.value);\n      adjustedFocal.y.value = focalY - (CENTER.y + offset.y.value);\n    };\n\n    const resetValues = (animated = true) => {\n      'worklet';\n\n      scale.value = animated ? withTiming(1) : 1;\n      offset.x.value = animated ? withTiming(0) : 0;\n      offset.y.value = animated ? withTiming(0) : 0;\n      translation.x.value = animated ? withTiming(0) : 0;\n      translation.y.value = animated ? withTiming(0) : 0;\n    };\n\n    const getEdgeX = () => {\n      'worklet';\n      const newWidth = scale.value * layout.x.value;\n\n      const point = (newWidth - width) / 2;\n\n      if (point < 0 || isNaN(point)) {\n        return [-0, 0];\n      }\n\n      return [-point, point];\n    };\n\n    const clampY = (value: number, newScale: number) => {\n      'worklet';\n      const newHeight = newScale * layout.y.value;\n      const point = (newHeight - height) / 2;\n\n      if (newHeight < height) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const clampX = (value: number, newScale: number) => {\n      'worklet';\n      const newWidth = newScale * layout.x.value;\n      const point = (newWidth - width) / 2;\n\n      if (newWidth < width) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const getEdgeY = () => {\n      'worklet';\n\n      const newHeight = scale.value * layout.y.value;\n\n      const point = (newHeight - height) / 2;\n\n      if (isNaN(point)) {\n        return [-0, 0];\n      }\n\n      return [-point, point];\n    };\n\n    const onStart = () => {\n      'worklet';\n\n      cancelAnimation(translateX);\n\n      offset.x.value = offset.x.value + translation.x.value;\n      offset.y.value = offset.y.value + translation.y.value;\n\n      translation.x.value = 0;\n      translation.y.value = 0;\n    };\n\n    const getPosition = (i?: number) => {\n      'worklet';\n\n      return (\n        -(width + emptySpaceWidth) * (typeof i !== 'undefined' ? i : index)\n      );\n    };\n\n    const getIndexFromPosition = (position: number) => {\n      'worklet';\n\n      return Math.round(position / -(width + emptySpaceWidth));\n    };\n\n    useAnimatedReaction(\n      () => {\n        return {\n          i: currentIndex.value,\n          translateX: translateX.value,\n          currentScale: scale.value,\n        };\n      },\n      ({ i, translateX: tx, currentScale }) => {\n        const translateIndex = tx / -(width + emptySpaceWidth);\n        if (loop) {\n          let diff = Math.abs((translateIndex % 1) - 0.5);\n          if (diff > 0.5) {\n            diff = 1 - diff;\n          }\n          if (diff > 0.48 && Math.abs(i) !== index) {\n            resetValues(false);\n            return;\n          }\n        }\n        if (Math.abs(i - index) === 2 && currentScale > 1) {\n          resetValues(false);\n        }\n      }\n    );\n\n    useEffect(() => {\n      setRef(index, {\n        reset: (animated: boolean) => resetValues(animated),\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [index]);\n\n    const setImageDimensions: RenderItemInfo<T>['setImageDimensions'] = ({\n      width: w,\n      height: h,\n    }) => {\n      originalLayout.x.value = w;\n      originalLayout.y.value = h;\n\n      const imgLayout = resizeImage({ width: w, height: h }, { width, height });\n      layout.x.value = imgLayout.width;\n      layout.y.value = imgLayout.height;\n    };\n\n    useEffect(() => {\n      if (originalLayout.x.value === 0 && originalLayout.y.value === 0) {\n        return;\n      }\n      setImageDimensions({\n        width: originalLayout.x.value,\n        height: originalLayout.y.value,\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width, height]);\n\n    const itemProps: RenderItemInfo<T> = {\n      item,\n      index,\n      setImageDimensions,\n    };\n\n    const scaleOffset = useSharedValue(1);\n\n    const pinchGesture = Gesture.Pinch()\n      .enabled(pinchEnabled)\n      .onStart(({ focalX, focalY }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onScaleStart) {\n          runOnJS(onScaleStart)(scale.value);\n        }\n\n        onStart();\n\n        scaleOffset.value = scale.value;\n\n        setAdjustedFocal({ focalX, focalY });\n\n        origin.x.value = adjustedFocal.x.value;\n        origin.y.value = adjustedFocal.y.value;\n      })\n      .onUpdate(({ scale: s, focalX, focalY, numberOfPointers }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (numberOfPointers !== 2) return;\n\n        const nextScale = withRubberBandClamp(\n          s * scaleOffset.value,\n          0.55,\n          maxScale,\n          [1, maxScale]\n        );\n\n        scale.value = nextScale;\n\n        setAdjustedFocal({ focalX, focalY });\n\n        translation.x.value =\n          adjustedFocal.x.value +\n          ((-1 * nextScale) / scaleOffset.value) * origin.x.value;\n        translation.y.value =\n          adjustedFocal.y.value +\n          ((-1 * nextScale) / scaleOffset.value) * origin.y.value;\n      })\n      .onEnd(() => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onScaleEnd) {\n          runOnJS(onScaleEnd)(scale.value);\n        }\n        if (scale.value < 1) {\n          resetValues();\n        } else {\n          const sc = Math.min(scale.value, maxScale);\n\n          const newWidth = sc * layout.x.value;\n          const newHeight = sc * layout.y.value;\n\n          const nextTransX =\n            scale.value > maxScale\n              ? adjustedFocal.x.value +\n                ((-1 * maxScale) / scaleOffset.value) * origin.x.value\n              : translation.x.value;\n\n          const nextTransY =\n            scale.value > maxScale\n              ? adjustedFocal.y.value +\n                ((-1 * maxScale) / scaleOffset.value) * origin.y.value\n              : translation.y.value;\n\n          const diffX = nextTransX + offset.x.value - (newWidth - width) / 2;\n\n          if (scale.value > maxScale) {\n            scale.value = withTiming(maxScale);\n          }\n\n          if (newWidth <= width) {\n            translation.x.value = withTiming(0);\n          } else {\n            let moved;\n            if (diffX > 0) {\n              translation.x.value = withTiming(nextTransX - diffX);\n              moved = true;\n            }\n\n            if (newWidth + diffX < width) {\n              translation.x.value = withTiming(\n                nextTransX + width - (newWidth + diffX)\n              );\n              moved = true;\n            }\n            if (!moved) {\n              translation.x.value = withTiming(nextTransX);\n            }\n          }\n\n          const diffY = nextTransY + offset.y.value - (newHeight - height) / 2;\n\n          if (newHeight <= height) {\n            translation.y.value = withTiming(-offset.y.value);\n          } else {\n            let moved;\n            if (diffY > 0) {\n              translation.y.value = withTiming(nextTransY - diffY);\n              moved = true;\n            }\n\n            if (newHeight + diffY < height) {\n              translation.y.value = withTiming(\n                nextTransY + height - (newHeight + diffY)\n              );\n              moved = true;\n            }\n            if (!moved) {\n              translation.y.value = withTiming(nextTransY);\n            }\n          }\n        }\n      });\n\n    const isVertical = useSharedValue(false);\n    const initialTranslateX = useSharedValue(0);\n    const shouldClose = useSharedValue(false);\n    const isMoving = useVector(0);\n\n    useAnimatedReaction(\n      () => {\n        if (!onTranslationYChange) {\n          return null;\n        }\n        return translation.y.value;\n      },\n      (ty, prevTy) => {\n        if (ty === null || (!ty && !prevTy)) {\n          return;\n        }\n        if (onTranslationYChange) {\n          onTranslationYChange(Math.abs(ty), shouldClose.value);\n        }\n      }\n    );\n\n    const panGesture = Gesture.Pan()\n      .enabled(swipeEnabled)\n      .minDistance(10)\n      .maxPointers(1)\n      .onBegin(() => {\n        'worklet';\n        if (!isActive.value) return;\n        const newWidth = scale.value * layout.x.value;\n        const newHeight = scale.value * layout.y.value;\n        if (\n          isMoving.x.value &&\n          offset.x.value < (newWidth - width) / 2 - translation.x.value &&\n          offset.x.value > -(newWidth - width) / 2 - translation.x.value\n        ) {\n          cancelAnimation(offset.x);\n        }\n\n        if (\n          isMoving.y.value &&\n          offset.y.value < (newHeight - height) / 2 - translation.y.value &&\n          offset.y.value > -(newHeight - height) / 2 - translation.y.value\n        ) {\n          cancelAnimation(offset.y);\n        }\n      })\n      .onStart(({ velocityY, velocityX }) => {\n        'worklet';\n        if (!isActive.value) return;\n\n        if (onPanStart) {\n          runOnJS(onPanStart)();\n        }\n\n        onStart();\n        isVertical.value = Math.abs(velocityY) > Math.abs(velocityX);\n        initialTranslateX.value = translateX.value;\n      })\n      .onUpdate(({ translationX, translationY, velocityY }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (disableVerticalSwipe && scale.value === 1 && isVertical.value)\n          return;\n\n        const x = getEdgeX();\n\n        if (!isVertical.value || scale.value > 1) {\n          const clampedX = clamp(\n            translationX,\n            x[0] - offset.x.value,\n            x[1] - offset.x.value\n          );\n\n          const transX = rtl\n            ? initialTranslateX.value - translationX + clampedX\n            : initialTranslateX.value + translationX - clampedX;\n\n          if (\n            hideAdjacentImagesOnScaledImage &&\n            disableTransitionOnScaledImage\n          ) {\n            const disabledTransition =\n              disableTransitionOnScaledImage && scale.value > 1;\n\n            const moveX = withRubberBandClamp(\n              transX,\n              0.55,\n              width,\n              disabledTransition\n                ? [getPosition(index), getPosition(index + 1)]\n                : [getPosition(length - 1), 0]\n            );\n\n            if (!disabledTransition) {\n              translateX.value = moveX;\n            }\n            if (disabledTransition) {\n              translation.x.value = rtl\n                ? clampedX - moveX + translateX.value\n                : clampedX + moveX - translateX.value;\n            } else {\n              translation.x.value = clampedX;\n            }\n          } else {\n            if (loop) {\n              translateX.value = transX;\n            } else {\n              translateX.value = withRubberBandClamp(\n                transX,\n                0.55,\n                width,\n                disableTransitionOnScaledImage && scale.value > 1\n                  ? [getPosition(index), getPosition(index + 1)]\n                  : [getPosition(length - 1), 0]\n              );\n            }\n            translation.x.value = clampedX;\n          }\n        }\n\n        const newHeight = scale.value * layout.y.value;\n\n        const edgeY = getEdgeY();\n\n        if (newHeight > height) {\n          translation.y.value = withRubberBandClamp(\n            translationY,\n            0.55,\n            newHeight,\n            [edgeY[0] - offset.y.value, edgeY[1] - offset.y.value]\n          );\n        } else if (\n          !(scale.value === 1 && translateX.value !== getPosition()) &&\n          (!disableSwipeUp || translationY >= 0)\n        ) {\n          translation.y.value = translationY;\n        }\n\n        if (isVertical.value && newHeight <= height) {\n          const destY = translationY + velocityY * 0.2;\n          shouldClose.value = disableSwipeUp\n            ? destY > 220\n            : Math.abs(destY) > 220;\n        }\n      })\n      .onEnd(({ velocityX, velocityY }) => {\n        'worklet';\n        if (!isActive.value) return;\n\n        const newHeight = scale.value * layout.y.value;\n\n        const edgeX = getEdgeX();\n\n        if (\n          Math.abs(translateX.value - getPosition()) >= 0 &&\n          edgeX.some((x) => x === translation.x.value + offset.x.value)\n        ) {\n          let snapPoints = [index - 1, index, index + 1]\n            .filter((_, y) => {\n              if (loop) return true;\n\n              if (y === 0) {\n                return !isFirst;\n              }\n              if (y === 2) {\n                return !isLast;\n              }\n              return true;\n            })\n            .map((i) => getPosition(i));\n\n          if (disableTransitionOnScaledImage && scale.value > 1) {\n            snapPoints = [getPosition(index)];\n          }\n\n          let snapTo = snapPoint(\n            translateX.value,\n            rtl ? -velocityX : velocityX,\n            snapPoints\n          );\n\n          const nextIndex = getIndexFromPosition(snapTo);\n\n          if (currentIndex.value !== nextIndex) {\n            if (loop) {\n              if (nextIndex === length) {\n                currentIndex.value = 0;\n                translateX.value = translateX.value - getPosition(length);\n                snapTo = 0;\n              } else if (nextIndex === -1) {\n                currentIndex.value = length - 1;\n                translateX.value = translateX.value + getPosition(length);\n                snapTo = getPosition(length - 1);\n              } else {\n                currentIndex.value = nextIndex;\n              }\n            } else {\n              currentIndex.value = nextIndex;\n            }\n          }\n\n          translateX.value = withSpring(snapTo, springConfig);\n        } else {\n          const newWidth = scale.value * layout.x.value;\n\n          isMoving.x.value = 1;\n          offset.x.value = withDecaySpring(\n            {\n              velocity: velocityX,\n              clamp: [\n                -(newWidth - width) / 2 - translation.x.value,\n                (newWidth - width) / 2 - translation.x.value,\n              ],\n            },\n            () => {\n              'worklet';\n              isMoving.x.value = 0;\n            }\n          );\n        }\n\n        if (onSwipeToClose && shouldClose.value) {\n          offset.y.value = withDecay({\n            velocity: velocityY,\n          });\n          runOnJS(onSwipeToClose)();\n          return;\n        }\n\n        shouldClose.value = false;\n\n        if (newHeight > height) {\n          isMoving.y.value = 1;\n          offset.y.value = withDecaySpring(\n            {\n              velocity: velocityY,\n              clamp: [\n                -(newHeight - height) / 2 - translation.y.value,\n                (newHeight - height) / 2 - translation.y.value,\n              ],\n            },\n            () => {\n              'worklet';\n              isMoving.y.value = 0;\n            }\n          );\n        } else {\n          const diffY =\n            translation.y.value + offset.y.value - (newHeight - height) / 2;\n\n          if (newHeight <= height && diffY !== height - diffY - newHeight) {\n            const moveTo = diffY - (height - newHeight) / 2;\n\n            translation.y.value = withTiming(translation.y.value - moveTo);\n          }\n        }\n      });\n\n    const interruptedScroll = useSharedValue(false);\n\n    const tapGesture = Gesture.Tap()\n      .enabled(!!onTap)\n      .numberOfTaps(1)\n      .maxDistance(10)\n      .onBegin(() => {\n        'worklet';\n        if (isMoving.x.value || isMoving.y.value) {\n          interruptedScroll.value = true;\n        }\n      })\n      .onEnd(() => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onTap && !interruptedScroll.value) {\n          runOnJS(onTap)();\n        }\n        interruptedScroll.value = false;\n      });\n\n    const doubleTapGesture = Gesture.Tap()\n      .enabled(doubleTapEnabled)\n      .numberOfTaps(2)\n      .maxDelay(doubleTapInterval)\n      .onEnd(({ x, y, numberOfPointers }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (numberOfPointers !== 1) return;\n        if (onTap && interruptedScroll.value) {\n          interruptedScroll.value = false;\n          if (onTap) {\n            runOnJS(onTap)();\n          }\n          return;\n        }\n        if (onDoubleTap) {\n          runOnJS(onDoubleTap)(scale.value === 1 ? doubleTapScale : 1);\n        }\n\n        if (scale.value === 1) {\n          scale.value = withTiming(doubleTapScale);\n\n          setAdjustedFocal({ focalX: x, focalY: y });\n\n          offset.x.value = withTiming(\n            clampX(\n              adjustedFocal.x.value +\n                -1 * doubleTapScale * adjustedFocal.x.value,\n              doubleTapScale\n            )\n          );\n          offset.y.value = withTiming(\n            clampY(\n              adjustedFocal.y.value +\n                -1 * doubleTapScale * adjustedFocal.y.value,\n              doubleTapScale\n            )\n          );\n        } else {\n          resetValues();\n        }\n      });\n\n    const longPressGesture = Gesture.LongPress()\n      .enabled(!!onLongPress)\n      .maxDistance(10)\n      .onStart(() => {\n        'worklet';\n        if (interruptedScroll.value) {\n          interruptedScroll.value = false;\n          return;\n        }\n        if (onLongPress) {\n          runOnJS(onLongPress)();\n        }\n      });\n\n    const containerAnimatedStyle = useAnimatedStyle(() => {\n      return {\n        zIndex: index === currentIndex.value ? 1 : 0,\n        transform: [\n          {\n            translateX: getPosition(rtl ? index : -index),\n          },\n        ],\n      };\n    });\n\n    const animatedStyle = useAnimatedStyle(() => {\n      const isNextForLast =\n        loop &&\n        isFirst &&\n        currentIndex.value === length - 1 &&\n        translateX.value < getPosition(length - 1);\n      const isPrevForFirst =\n        loop &&\n        isLast &&\n        currentIndex.value === 0 &&\n        translateX.value > getPosition(0);\n      return {\n        transform: [\n          {\n            translateX:\n              offset.x.value +\n              translation.x.value -\n              (isNextForLast ? getPosition(rtl ? -length : length) : 0) +\n              (isPrevForFirst ? getPosition(rtl ? -length : length) : 0),\n          },\n          { translateY: offset.y.value + translation.y.value },\n          { scale: scale.value },\n        ],\n      };\n    });\n\n    return (\n      <GestureDetector\n        gesture={Gesture.Race(\n          Gesture.Simultaneous(\n            longPressGesture,\n            Gesture.Race(panGesture, pinchGesture)\n          ),\n          Gesture.Exclusive(doubleTapGesture, tapGesture)\n        )}\n      >\n        <Animated.View\n          style={[\n            styles.itemContainer,\n            { width, height },\n            containerAnimatedStyle,\n          ]}\n        >\n          <Animated.View style={[{ width, height }, animatedStyle]}>\n            {renderItem(itemProps)}\n          </Animated.View>\n        </Animated.View>\n      </GestureDetector>\n    );\n  }\n);\n\nexport type GalleryRef = {\n  setIndex: (newIndex: number, animated?: boolean) => void;\n  reset: (animated?: boolean) => void;\n};\n\nexport type GalleryReactRef = React.Ref<GalleryRef>;\n\ntype GalleryProps<T> = EventsCallbacks & {\n  ref?: GalleryReactRef;\n  data: T[];\n\n  renderItem?: RenderItem<T>;\n  keyExtractor?: (item: T, index: number) => string | number;\n  initialIndex?: number;\n  onIndexChange?: (index: number) => void;\n  numToRender?: number;\n  emptySpaceWidth?: number;\n  doubleTapScale?: number;\n  doubleTapInterval?: number;\n  maxScale?: number;\n  style?: ViewStyle;\n  containerDimensions?: { width: number; height: number };\n  pinchEnabled?: boolean;\n  swipeEnabled?: boolean;\n  doubleTapEnabled?: boolean;\n  disableTransitionOnScaledImage?: boolean;\n  hideAdjacentImagesOnScaledImage?: boolean;\n  disableVerticalSwipe?: boolean;\n  disableSwipeUp?: boolean;\n  loop?: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n};\n\nconst GalleryComponent = <T extends any>(\n  {\n    data,\n    renderItem = defaultRenderImage,\n    initialIndex = 0,\n    numToRender = 5,\n    emptySpaceWidth = SPACE_BETWEEN_IMAGES,\n    doubleTapScale = DOUBLE_TAP_SCALE,\n    doubleTapInterval = 500,\n    maxScale = MAX_SCALE,\n    pinchEnabled = true,\n    swipeEnabled = true,\n    doubleTapEnabled = true,\n    disableTransitionOnScaledImage = false,\n    hideAdjacentImagesOnScaledImage = false,\n    onIndexChange,\n    style,\n    keyExtractor,\n    containerDimensions,\n    disableVerticalSwipe,\n    disableSwipeUp = false,\n    loop = false,\n    onScaleChange,\n    onScaleChangeRange,\n    ...eventsCallbacks\n  }: GalleryProps<T>,\n  ref: GalleryReactRef\n) => {\n  const windowDimensions = useWindowDimensions();\n  const dimensions = containerDimensions || windowDimensions;\n\n  const isLoop = loop && data?.length > 1;\n\n  const [index, setIndex] = useState(initialIndex);\n\n  const refs = useRef<ItemRef[]>([]);\n\n  const setRef = useCallback((itemIndex: number, value: ItemRef) => {\n    refs.current[itemIndex] = value;\n  }, []);\n\n  const translateX = useSharedValue(\n    initialIndex * -(dimensions.width + emptySpaceWidth)\n  );\n\n  const currentIndex = useSharedValue(initialIndex);\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ translateX: rtl ? -translateX.value : translateX.value }],\n  }));\n\n  const changeIndex = useCallback(\n    (newIndex) => {\n      onIndexChange?.(newIndex);\n      setIndex(newIndex);\n    },\n    [onIndexChange, setIndex]\n  );\n\n  useAnimatedReaction(\n    () => currentIndex.value,\n    (newIndex) => runOnJS(changeIndex)(newIndex),\n    [currentIndex, changeIndex]\n  );\n\n  useEffect(() => {\n    translateX.value = index * -(dimensions.width + emptySpaceWidth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dimensions.width]);\n\n  useImperativeHandle(ref, () => ({\n    setIndex(newIndex: number, animated?: boolean) {\n      refs.current?.[index].reset(false);\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      if (animated) {\n        translateX.value = withSpring(\n          newIndex * -(dimensions.width + emptySpaceWidth),\n          springConfig\n        );\n      } else {\n        translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n      }\n    },\n    reset(animated = false) {\n      refs.current?.forEach((itemRef) => itemRef.reset(animated));\n    },\n  }));\n\n  useEffect(() => {\n    if (index >= data.length) {\n      const newIndex = data.length - 1;\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data?.length, dimensions.width]);\n\n  return (\n    <GestureHandlerRootView style={[styles.container, style]}>\n      <Animated.View style={[styles.rowContainer, animatedStyle]}>\n        {data.map((item: any, i) => {\n          const isFirst = i === 0;\n\n          const outOfLoopRenderRange =\n            !isLoop ||\n            (Math.abs(i - index) < data.length - (numToRender - 1) / 2 &&\n              Math.abs(i - index) > (numToRender - 1) / 2);\n\n          const hidden =\n            Math.abs(i - index) > (numToRender - 1) / 2 && outOfLoopRenderRange;\n\n          if (hidden) {\n            return null;\n          }\n\n          return (\n            // @ts-ignore\n            <ResizableImage\n              key={\n                keyExtractor\n                  ? keyExtractor(item, i)\n                  : item.id || item.key || item._id || item\n              }\n              {...{\n                translateX,\n                item,\n                currentIndex,\n                index: i,\n                isFirst,\n                isLast: i === data.length - 1,\n                length: data.length,\n                renderItem,\n                emptySpaceWidth,\n                doubleTapScale,\n                doubleTapInterval,\n                maxScale,\n                pinchEnabled,\n                swipeEnabled,\n                doubleTapEnabled,\n                disableTransitionOnScaledImage,\n                hideAdjacentImagesOnScaledImage,\n                disableVerticalSwipe,\n                disableSwipeUp,\n                loop: isLoop,\n                onScaleChange,\n                onScaleChangeRange,\n                setRef,\n                ...eventsCallbacks,\n                ...dimensions,\n              }}\n            />\n          );\n        })}\n      </Animated.View>\n    </GestureHandlerRootView>\n  );\n};\n\nconst Gallery = React.forwardRef(GalleryComponent) as <T extends any>(\n  p: GalleryProps<T> & { ref?: GalleryReactRef }\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, backgroundColor: 'black' },\n  rowContainer: { flex: 1 },\n  itemContainer: { position: 'absolute' },\n});\n\nexport default Gallery;\n"]}