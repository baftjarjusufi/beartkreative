{"version":3,"sources":["index.tsx"],"names":["React","useCallback","useEffect","useImperativeHandle","useRef","useState","I18nManager","Image","StyleSheet","useWindowDimensions","Animated","useAnimatedStyle","useDerivedValue","useSharedValue","withTiming","withDecay","useAnimatedReaction","runOnJS","withSpring","cancelAnimation","Gesture","GestureDetector","GestureHandlerRootView","clamp","withDecaySpring","withRubberBandClamp","resizeImage","rtl","isRTL","DOUBLE_TAP_SCALE","MAX_SCALE","SPACE_BETWEEN_IMAGES","useVector","x1","y1","x","y","snapPoint","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter","defaultRenderImage","item","setImageDimensions","e","height","h","width","w","nativeEvent","source","uri","absoluteFillObject","springConfig","damping","mass","stiffness","restDisplacementThreshold","restSpeedThreshold","ResizableImage","memo","translateX","index","isFirst","isLast","currentIndex","renderItem","onSwipeToClose","onTap","onDoubleTap","onLongPress","onPanStart","onScaleStart","onScaleEnd","emptySpaceWidth","doubleTapScale","doubleTapInterval","maxScale","pinchEnabled","swipeEnabled","doubleTapEnabled","disableTransitionOnScaledImage","hideAdjacentImagesOnScaledImage","disableVerticalSwipe","disableSwipeUp","loop","length","onScaleChange","onScaleChangeRange","onTranslationYChange","setRef","CENTER","offset","scale","translation","origin","adjustedFocal","originalLayout","layout","isActive","scaleReaction","start","end","setAdjustedFocal","focalX","focalY","resetValues","animated","getEdgeX","newWidth","isNaN","clampY","newScale","newHeight","clampX","getEdgeY","onStart","getPosition","i","getIndexFromPosition","position","round","currentScale","tx","translateIndex","diff","reset","imgLayout","itemProps","scaleOffset","pinchGesture","Pinch","enabled","onUpdate","s","numberOfPointers","nextScale","onEnd","sc","nextTransX","nextTransY","diffX","moved","diffY","isVertical","initialTranslateX","shouldClose","isMoving","ty","prevTy","panGesture","Pan","minDistance","maxPointers","onBegin","velocityY","velocityX","translationX","translationY","clampedX","transX","disabledTransition","moveX","edgeY","destY","edgeX","some","snapPoints","_","snapTo","nextIndex","moveTo","interruptedScroll","tapGesture","Tap","numberOfTaps","maxDistance","doubleTapGesture","maxDelay","longPressGesture","LongPress","containerAnimatedStyle","zIndex","transform","animatedStyle","isNextForLast","isPrevForFirst","translateY","Race","Simultaneous","Exclusive","styles","itemContainer","GalleryComponent","data","initialIndex","numToRender","onIndexChange","style","keyExtractor","containerDimensions","eventsCallbacks","ref","windowDimensions","dimensions","isLoop","setIndex","refs","itemIndex","current","changeIndex","newIndex","forEach","itemRef","container","rowContainer","outOfLoopRenderRange","hidden","id","key","_id","Gallery","forwardRef","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  I18nManager,\n  Image,\n  StyleSheet,\n  useWindowDimensions,\n  ViewStyle,\n} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n  withDecay,\n  useAnimatedReaction,\n  runOnJS,\n  withSpring,\n  cancelAnimation,\n} from 'react-native-reanimated';\nimport {\n  Gesture,\n  GestureDetector,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\nimport {\n  clamp,\n  withDecaySpring,\n  withRubberBandClamp,\n  resizeImage,\n} from './utils';\n\nconst rtl = I18nManager.isRTL;\n\nconst DOUBLE_TAP_SCALE = 3;\nconst MAX_SCALE = 6;\nconst SPACE_BETWEEN_IMAGES = 40;\n\ntype Dimensions = {\n  height: number;\n  width: number;\n};\n\nexport const useVector = (x1 = 0, y1?: number) => {\n  const x = useSharedValue(x1);\n  const y = useSharedValue(y1 ?? x1);\n  return { x, y };\n};\n\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  'worklet';\n  const point = value + 0.25 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n\nexport type RenderItemInfo<T> = {\n  index: number;\n  item: T;\n  setImageDimensions: (imageDimensions: Dimensions) => void;\n};\n\nconst defaultRenderImage = ({\n  item,\n  setImageDimensions,\n}: RenderItemInfo<any>) => {\n  return (\n    <Image\n      onLoad={(e) => {\n        const { height: h, width: w } = e.nativeEvent.source;\n        setImageDimensions({ height: h, width: w });\n      }}\n      source={{ uri: item }}\n      resizeMode=\"contain\"\n      style={StyleSheet.absoluteFillObject}\n    />\n  );\n};\n\ntype EventsCallbacks = {\n  onSwipeToClose?: () => void;\n  onTap?: () => void;\n  onDoubleTap?: (toScale: number) => void;\n  onLongPress?: () => void;\n  onScaleStart?: (scale: number) => void;\n  onScaleEnd?: (scale: number) => void;\n  onPanStart?: () => void;\n  onTranslationYChange?: (translationY: number, shouldClose: boolean) => void;\n};\n\ntype RenderItem<T> = (\n  imageInfo: RenderItemInfo<T>\n) => React.ReactElement | null;\n\ntype Props<T> = EventsCallbacks & {\n  item: T;\n  index: number;\n  isFirst: boolean;\n  isLast: boolean;\n  translateX: Animated.SharedValue<number>;\n  currentIndex: Animated.SharedValue<number>;\n  renderItem: RenderItem<T>;\n  width: number;\n  height: number;\n  length: number;\n\n  emptySpaceWidth: number;\n  doubleTapInterval: number;\n  doubleTapScale: number;\n  maxScale: number;\n  pinchEnabled: boolean;\n  swipeEnabled: boolean;\n  doubleTapEnabled: boolean;\n  disableTransitionOnScaledImage: boolean;\n  hideAdjacentImagesOnScaledImage: boolean;\n  disableVerticalSwipe: boolean;\n  disableSwipeUp?: boolean;\n  loop: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n\n  setRef: (index: number, value: ItemRef) => void;\n};\n\nconst springConfig = {\n  damping: 800,\n  mass: 1,\n  stiffness: 250,\n  restDisplacementThreshold: 0.02,\n  restSpeedThreshold: 4,\n};\n\ntype ItemRef = { reset: (animated: boolean) => void };\n\nconst ResizableImage = React.memo(\n  <T extends any>({\n    item,\n    translateX,\n    index,\n    isFirst,\n    isLast,\n    currentIndex,\n    renderItem,\n    width,\n    height,\n    onSwipeToClose,\n    onTap,\n    onDoubleTap,\n    onLongPress,\n    onPanStart,\n    onScaleStart,\n    onScaleEnd,\n    emptySpaceWidth,\n    doubleTapScale,\n    doubleTapInterval,\n    maxScale,\n    pinchEnabled,\n    swipeEnabled,\n    doubleTapEnabled,\n    disableTransitionOnScaledImage,\n    hideAdjacentImagesOnScaledImage,\n    disableVerticalSwipe,\n    disableSwipeUp,\n    loop,\n    length,\n    onScaleChange,\n    onScaleChangeRange,\n    onTranslationYChange,\n    setRef,\n  }: Props<T>) => {\n    const CENTER = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    const offset = useVector(0, 0);\n\n    const scale = useSharedValue(1);\n\n    const translation = useVector(0, 0);\n\n    const origin = useVector(0, 0);\n\n    const adjustedFocal = useVector(0, 0);\n\n    const originalLayout = useVector(width, 0);\n    const layout = useVector(width, 0);\n\n    const isActive = useDerivedValue(() => currentIndex.value === index, [\n      currentIndex,\n      index,\n    ]);\n\n    useAnimatedReaction(\n      () => {\n        return scale.value;\n      },\n      (scaleReaction) => {\n        if (!onScaleChange) {\n          return;\n        }\n\n        if (!onScaleChangeRange) {\n          runOnJS(onScaleChange)(scaleReaction);\n          return;\n        }\n\n        if (\n          scaleReaction > onScaleChangeRange.start &&\n          scaleReaction < onScaleChangeRange.end\n        ) {\n          runOnJS(onScaleChange)(scaleReaction);\n        }\n      }\n    );\n\n    const setAdjustedFocal = ({\n      focalX,\n      focalY,\n    }: Record<'focalX' | 'focalY', number>) => {\n      'worklet';\n      adjustedFocal.x.value = focalX - (CENTER.x + offset.x.value);\n      adjustedFocal.y.value = focalY - (CENTER.y + offset.y.value);\n    };\n\n    const resetValues = (animated = true) => {\n      'worklet';\n\n      scale.value = animated ? withTiming(1) : 1;\n      offset.x.value = animated ? withTiming(0) : 0;\n      offset.y.value = animated ? withTiming(0) : 0;\n      translation.x.value = animated ? withTiming(0) : 0;\n      translation.y.value = animated ? withTiming(0) : 0;\n    };\n\n    const getEdgeX = () => {\n      'worklet';\n      const newWidth = scale.value * layout.x.value;\n\n      const point = (newWidth - width) / 2;\n\n      if (point < 0 || isNaN(point)) {\n        return [-0, 0];\n      }\n\n      return [-point, point];\n    };\n\n    const clampY = (value: number, newScale: number) => {\n      'worklet';\n      const newHeight = newScale * layout.y.value;\n      const point = (newHeight - height) / 2;\n\n      if (newHeight < height) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const clampX = (value: number, newScale: number) => {\n      'worklet';\n      const newWidth = newScale * layout.x.value;\n      const point = (newWidth - width) / 2;\n\n      if (newWidth < width) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const getEdgeY = () => {\n      'worklet';\n\n      const newHeight = scale.value * layout.y.value;\n\n      const point = (newHeight - height) / 2;\n\n      if (isNaN(point)) {\n        return [-0, 0];\n      }\n\n      return [-point, point];\n    };\n\n    const onStart = () => {\n      'worklet';\n\n      cancelAnimation(translateX);\n\n      offset.x.value = offset.x.value + translation.x.value;\n      offset.y.value = offset.y.value + translation.y.value;\n\n      translation.x.value = 0;\n      translation.y.value = 0;\n    };\n\n    const getPosition = (i?: number) => {\n      'worklet';\n\n      return (\n        -(width + emptySpaceWidth) * (typeof i !== 'undefined' ? i : index)\n      );\n    };\n\n    const getIndexFromPosition = (position: number) => {\n      'worklet';\n\n      return Math.round(position / -(width + emptySpaceWidth));\n    };\n\n    useAnimatedReaction(\n      () => {\n        return {\n          i: currentIndex.value,\n          translateX: translateX.value,\n          currentScale: scale.value,\n        };\n      },\n      ({ i, translateX: tx, currentScale }) => {\n        const translateIndex = tx / -(width + emptySpaceWidth);\n        if (loop) {\n          let diff = Math.abs((translateIndex % 1) - 0.5);\n          if (diff > 0.5) {\n            diff = 1 - diff;\n          }\n          if (diff > 0.48 && Math.abs(i) !== index) {\n            resetValues(false);\n            return;\n          }\n        }\n        if (Math.abs(i - index) === 2 && currentScale > 1) {\n          resetValues(false);\n        }\n      }\n    );\n\n    useEffect(() => {\n      setRef(index, {\n        reset: (animated: boolean) => resetValues(animated),\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [index]);\n\n    const setImageDimensions: RenderItemInfo<T>['setImageDimensions'] = ({\n      width: w,\n      height: h,\n    }) => {\n      originalLayout.x.value = w;\n      originalLayout.y.value = h;\n\n      const imgLayout = resizeImage({ width: w, height: h }, { width, height });\n      layout.x.value = imgLayout.width;\n      layout.y.value = imgLayout.height;\n    };\n\n    useEffect(() => {\n      if (originalLayout.x.value === 0 && originalLayout.y.value === 0) {\n        return;\n      }\n      setImageDimensions({\n        width: originalLayout.x.value,\n        height: originalLayout.y.value,\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width, height]);\n\n    const itemProps: RenderItemInfo<T> = {\n      item,\n      index,\n      setImageDimensions,\n    };\n\n    const scaleOffset = useSharedValue(1);\n\n    const pinchGesture = Gesture.Pinch()\n      .enabled(pinchEnabled)\n      .onStart(({ focalX, focalY }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onScaleStart) {\n          runOnJS(onScaleStart)(scale.value);\n        }\n\n        onStart();\n\n        scaleOffset.value = scale.value;\n\n        setAdjustedFocal({ focalX, focalY });\n\n        origin.x.value = adjustedFocal.x.value;\n        origin.y.value = adjustedFocal.y.value;\n      })\n      .onUpdate(({ scale: s, focalX, focalY, numberOfPointers }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (numberOfPointers !== 2) return;\n\n        const nextScale = withRubberBandClamp(\n          s * scaleOffset.value,\n          0.55,\n          maxScale,\n          [1, maxScale]\n        );\n\n        scale.value = nextScale;\n\n        setAdjustedFocal({ focalX, focalY });\n\n        translation.x.value =\n          adjustedFocal.x.value +\n          ((-1 * nextScale) / scaleOffset.value) * origin.x.value;\n        translation.y.value =\n          adjustedFocal.y.value +\n          ((-1 * nextScale) / scaleOffset.value) * origin.y.value;\n      })\n      .onEnd(() => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onScaleEnd) {\n          runOnJS(onScaleEnd)(scale.value);\n        }\n        if (scale.value < 1) {\n          resetValues();\n        } else {\n          const sc = Math.min(scale.value, maxScale);\n\n          const newWidth = sc * layout.x.value;\n          const newHeight = sc * layout.y.value;\n\n          const nextTransX =\n            scale.value > maxScale\n              ? adjustedFocal.x.value +\n                ((-1 * maxScale) / scaleOffset.value) * origin.x.value\n              : translation.x.value;\n\n          const nextTransY =\n            scale.value > maxScale\n              ? adjustedFocal.y.value +\n                ((-1 * maxScale) / scaleOffset.value) * origin.y.value\n              : translation.y.value;\n\n          const diffX = nextTransX + offset.x.value - (newWidth - width) / 2;\n\n          if (scale.value > maxScale) {\n            scale.value = withTiming(maxScale);\n          }\n\n          if (newWidth <= width) {\n            translation.x.value = withTiming(0);\n          } else {\n            let moved;\n            if (diffX > 0) {\n              translation.x.value = withTiming(nextTransX - diffX);\n              moved = true;\n            }\n\n            if (newWidth + diffX < width) {\n              translation.x.value = withTiming(\n                nextTransX + width - (newWidth + diffX)\n              );\n              moved = true;\n            }\n            if (!moved) {\n              translation.x.value = withTiming(nextTransX);\n            }\n          }\n\n          const diffY = nextTransY + offset.y.value - (newHeight - height) / 2;\n\n          if (newHeight <= height) {\n            translation.y.value = withTiming(-offset.y.value);\n          } else {\n            let moved;\n            if (diffY > 0) {\n              translation.y.value = withTiming(nextTransY - diffY);\n              moved = true;\n            }\n\n            if (newHeight + diffY < height) {\n              translation.y.value = withTiming(\n                nextTransY + height - (newHeight + diffY)\n              );\n              moved = true;\n            }\n            if (!moved) {\n              translation.y.value = withTiming(nextTransY);\n            }\n          }\n        }\n      });\n\n    const isVertical = useSharedValue(false);\n    const initialTranslateX = useSharedValue(0);\n    const shouldClose = useSharedValue(false);\n    const isMoving = useVector(0);\n\n    useAnimatedReaction(\n      () => {\n        if (!onTranslationYChange) {\n          return null;\n        }\n        return translation.y.value;\n      },\n      (ty, prevTy) => {\n        if (ty === null || (!ty && !prevTy)) {\n          return;\n        }\n        if (onTranslationYChange) {\n          onTranslationYChange(Math.abs(ty), shouldClose.value);\n        }\n      }\n    );\n\n    const panGesture = Gesture.Pan()\n      .enabled(swipeEnabled)\n      .minDistance(10)\n      .maxPointers(1)\n      .onBegin(() => {\n        'worklet';\n        if (!isActive.value) return;\n        const newWidth = scale.value * layout.x.value;\n        const newHeight = scale.value * layout.y.value;\n        if (\n          isMoving.x.value &&\n          offset.x.value < (newWidth - width) / 2 - translation.x.value &&\n          offset.x.value > -(newWidth - width) / 2 - translation.x.value\n        ) {\n          cancelAnimation(offset.x);\n        }\n\n        if (\n          isMoving.y.value &&\n          offset.y.value < (newHeight - height) / 2 - translation.y.value &&\n          offset.y.value > -(newHeight - height) / 2 - translation.y.value\n        ) {\n          cancelAnimation(offset.y);\n        }\n      })\n      .onStart(({ velocityY, velocityX }) => {\n        'worklet';\n        if (!isActive.value) return;\n\n        if (onPanStart) {\n          runOnJS(onPanStart)();\n        }\n\n        onStart();\n        isVertical.value = Math.abs(velocityY) > Math.abs(velocityX);\n        initialTranslateX.value = translateX.value;\n      })\n      .onUpdate(({ translationX, translationY, velocityY }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (disableVerticalSwipe && scale.value === 1 && isVertical.value)\n          return;\n\n        const x = getEdgeX();\n\n        if (!isVertical.value || scale.value > 1) {\n          const clampedX = clamp(\n            translationX,\n            x[0] - offset.x.value,\n            x[1] - offset.x.value\n          );\n\n          const transX = rtl\n            ? initialTranslateX.value - translationX + clampedX\n            : initialTranslateX.value + translationX - clampedX;\n\n          if (\n            hideAdjacentImagesOnScaledImage &&\n            disableTransitionOnScaledImage\n          ) {\n            const disabledTransition =\n              disableTransitionOnScaledImage && scale.value > 1;\n\n            const moveX = withRubberBandClamp(\n              transX,\n              0.55,\n              width,\n              disabledTransition\n                ? [getPosition(index), getPosition(index + 1)]\n                : [getPosition(length - 1), 0]\n            );\n\n            if (!disabledTransition) {\n              translateX.value = moveX;\n            }\n            if (disabledTransition) {\n              translation.x.value = rtl\n                ? clampedX - moveX + translateX.value\n                : clampedX + moveX - translateX.value;\n            } else {\n              translation.x.value = clampedX;\n            }\n          } else {\n            if (loop) {\n              translateX.value = transX;\n            } else {\n              translateX.value = withRubberBandClamp(\n                transX,\n                0.55,\n                width,\n                disableTransitionOnScaledImage && scale.value > 1\n                  ? [getPosition(index), getPosition(index + 1)]\n                  : [getPosition(length - 1), 0]\n              );\n            }\n            translation.x.value = clampedX;\n          }\n        }\n\n        const newHeight = scale.value * layout.y.value;\n\n        const edgeY = getEdgeY();\n\n        if (newHeight > height) {\n          translation.y.value = withRubberBandClamp(\n            translationY,\n            0.55,\n            newHeight,\n            [edgeY[0] - offset.y.value, edgeY[1] - offset.y.value]\n          );\n        } else if (\n          !(scale.value === 1 && translateX.value !== getPosition()) &&\n          (!disableSwipeUp || translationY >= 0)\n        ) {\n          translation.y.value = translationY;\n        }\n\n        if (isVertical.value && newHeight <= height) {\n          const destY = translationY + velocityY * 0.2;\n          shouldClose.value = disableSwipeUp\n            ? destY > 220\n            : Math.abs(destY) > 220;\n        }\n      })\n      .onEnd(({ velocityX, velocityY }) => {\n        'worklet';\n        if (!isActive.value) return;\n\n        const newHeight = scale.value * layout.y.value;\n\n        const edgeX = getEdgeX();\n\n        if (\n          Math.abs(translateX.value - getPosition()) >= 0 &&\n          edgeX.some((x) => x === translation.x.value + offset.x.value)\n        ) {\n          let snapPoints = [index - 1, index, index + 1]\n            .filter((_, y) => {\n              if (loop) return true;\n\n              if (y === 0) {\n                return !isFirst;\n              }\n              if (y === 2) {\n                return !isLast;\n              }\n              return true;\n            })\n            .map((i) => getPosition(i));\n\n          if (disableTransitionOnScaledImage && scale.value > 1) {\n            snapPoints = [getPosition(index)];\n          }\n\n          let snapTo = snapPoint(\n            translateX.value,\n            rtl ? -velocityX : velocityX,\n            snapPoints\n          );\n\n          const nextIndex = getIndexFromPosition(snapTo);\n\n          if (currentIndex.value !== nextIndex) {\n            if (loop) {\n              if (nextIndex === length) {\n                currentIndex.value = 0;\n                translateX.value = translateX.value - getPosition(length);\n                snapTo = 0;\n              } else if (nextIndex === -1) {\n                currentIndex.value = length - 1;\n                translateX.value = translateX.value + getPosition(length);\n                snapTo = getPosition(length - 1);\n              } else {\n                currentIndex.value = nextIndex;\n              }\n            } else {\n              currentIndex.value = nextIndex;\n            }\n          }\n\n          translateX.value = withSpring(snapTo, springConfig);\n        } else {\n          const newWidth = scale.value * layout.x.value;\n\n          isMoving.x.value = 1;\n          offset.x.value = withDecaySpring(\n            {\n              velocity: velocityX,\n              clamp: [\n                -(newWidth - width) / 2 - translation.x.value,\n                (newWidth - width) / 2 - translation.x.value,\n              ],\n            },\n            () => {\n              'worklet';\n              isMoving.x.value = 0;\n            }\n          );\n        }\n\n        if (onSwipeToClose && shouldClose.value) {\n          offset.y.value = withDecay({\n            velocity: velocityY,\n          });\n          runOnJS(onSwipeToClose)();\n          return;\n        }\n\n        shouldClose.value = false;\n\n        if (newHeight > height) {\n          isMoving.y.value = 1;\n          offset.y.value = withDecaySpring(\n            {\n              velocity: velocityY,\n              clamp: [\n                -(newHeight - height) / 2 - translation.y.value,\n                (newHeight - height) / 2 - translation.y.value,\n              ],\n            },\n            () => {\n              'worklet';\n              isMoving.y.value = 0;\n            }\n          );\n        } else {\n          const diffY =\n            translation.y.value + offset.y.value - (newHeight - height) / 2;\n\n          if (newHeight <= height && diffY !== height - diffY - newHeight) {\n            const moveTo = diffY - (height - newHeight) / 2;\n\n            translation.y.value = withTiming(translation.y.value - moveTo);\n          }\n        }\n      });\n\n    const interruptedScroll = useSharedValue(false);\n\n    const tapGesture = Gesture.Tap()\n      .enabled(!!onTap)\n      .numberOfTaps(1)\n      .maxDistance(10)\n      .onBegin(() => {\n        'worklet';\n        if (isMoving.x.value || isMoving.y.value) {\n          interruptedScroll.value = true;\n        }\n      })\n      .onEnd(() => {\n        'worklet';\n        if (!isActive.value) return;\n        if (onTap && !interruptedScroll.value) {\n          runOnJS(onTap)();\n        }\n        interruptedScroll.value = false;\n      });\n\n    const doubleTapGesture = Gesture.Tap()\n      .enabled(doubleTapEnabled)\n      .numberOfTaps(2)\n      .maxDelay(doubleTapInterval)\n      .onEnd(({ x, y, numberOfPointers }) => {\n        'worklet';\n        if (!isActive.value) return;\n        if (numberOfPointers !== 1) return;\n        if (onTap && interruptedScroll.value) {\n          interruptedScroll.value = false;\n          if (onTap) {\n            runOnJS(onTap)();\n          }\n          return;\n        }\n        if (onDoubleTap) {\n          runOnJS(onDoubleTap)(scale.value === 1 ? doubleTapScale : 1);\n        }\n\n        if (scale.value === 1) {\n          scale.value = withTiming(doubleTapScale);\n\n          setAdjustedFocal({ focalX: x, focalY: y });\n\n          offset.x.value = withTiming(\n            clampX(\n              adjustedFocal.x.value +\n                -1 * doubleTapScale * adjustedFocal.x.value,\n              doubleTapScale\n            )\n          );\n          offset.y.value = withTiming(\n            clampY(\n              adjustedFocal.y.value +\n                -1 * doubleTapScale * adjustedFocal.y.value,\n              doubleTapScale\n            )\n          );\n        } else {\n          resetValues();\n        }\n      });\n\n    const longPressGesture = Gesture.LongPress()\n      .enabled(!!onLongPress)\n      .maxDistance(10)\n      .onStart(() => {\n        'worklet';\n        if (interruptedScroll.value) {\n          interruptedScroll.value = false;\n          return;\n        }\n        if (onLongPress) {\n          runOnJS(onLongPress)();\n        }\n      });\n\n    const containerAnimatedStyle = useAnimatedStyle(() => {\n      return {\n        zIndex: index === currentIndex.value ? 1 : 0,\n        transform: [\n          {\n            translateX: getPosition(rtl ? index : -index),\n          },\n        ],\n      };\n    });\n\n    const animatedStyle = useAnimatedStyle(() => {\n      const isNextForLast =\n        loop &&\n        isFirst &&\n        currentIndex.value === length - 1 &&\n        translateX.value < getPosition(length - 1);\n      const isPrevForFirst =\n        loop &&\n        isLast &&\n        currentIndex.value === 0 &&\n        translateX.value > getPosition(0);\n      return {\n        transform: [\n          {\n            translateX:\n              offset.x.value +\n              translation.x.value -\n              (isNextForLast ? getPosition(rtl ? -length : length) : 0) +\n              (isPrevForFirst ? getPosition(rtl ? -length : length) : 0),\n          },\n          { translateY: offset.y.value + translation.y.value },\n          { scale: scale.value },\n        ],\n      };\n    });\n\n    return (\n      <GestureDetector\n        gesture={Gesture.Race(\n          Gesture.Simultaneous(\n            longPressGesture,\n            Gesture.Race(panGesture, pinchGesture)\n          ),\n          Gesture.Exclusive(doubleTapGesture, tapGesture)\n        )}\n      >\n        <Animated.View\n          style={[\n            styles.itemContainer,\n            { width, height },\n            containerAnimatedStyle,\n          ]}\n        >\n          <Animated.View style={[{ width, height }, animatedStyle]}>\n            {renderItem(itemProps)}\n          </Animated.View>\n        </Animated.View>\n      </GestureDetector>\n    );\n  }\n);\n\nexport type GalleryRef = {\n  setIndex: (newIndex: number, animated?: boolean) => void;\n  reset: (animated?: boolean) => void;\n};\n\nexport type GalleryReactRef = React.Ref<GalleryRef>;\n\ntype GalleryProps<T> = EventsCallbacks & {\n  ref?: GalleryReactRef;\n  data: T[];\n\n  renderItem?: RenderItem<T>;\n  keyExtractor?: (item: T, index: number) => string | number;\n  initialIndex?: number;\n  onIndexChange?: (index: number) => void;\n  numToRender?: number;\n  emptySpaceWidth?: number;\n  doubleTapScale?: number;\n  doubleTapInterval?: number;\n  maxScale?: number;\n  style?: ViewStyle;\n  containerDimensions?: { width: number; height: number };\n  pinchEnabled?: boolean;\n  swipeEnabled?: boolean;\n  doubleTapEnabled?: boolean;\n  disableTransitionOnScaledImage?: boolean;\n  hideAdjacentImagesOnScaledImage?: boolean;\n  disableVerticalSwipe?: boolean;\n  disableSwipeUp?: boolean;\n  loop?: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n};\n\nconst GalleryComponent = <T extends any>(\n  {\n    data,\n    renderItem = defaultRenderImage,\n    initialIndex = 0,\n    numToRender = 5,\n    emptySpaceWidth = SPACE_BETWEEN_IMAGES,\n    doubleTapScale = DOUBLE_TAP_SCALE,\n    doubleTapInterval = 500,\n    maxScale = MAX_SCALE,\n    pinchEnabled = true,\n    swipeEnabled = true,\n    doubleTapEnabled = true,\n    disableTransitionOnScaledImage = false,\n    hideAdjacentImagesOnScaledImage = false,\n    onIndexChange,\n    style,\n    keyExtractor,\n    containerDimensions,\n    disableVerticalSwipe,\n    disableSwipeUp = false,\n    loop = false,\n    onScaleChange,\n    onScaleChangeRange,\n    ...eventsCallbacks\n  }: GalleryProps<T>,\n  ref: GalleryReactRef\n) => {\n  const windowDimensions = useWindowDimensions();\n  const dimensions = containerDimensions || windowDimensions;\n\n  const isLoop = loop && data?.length > 1;\n\n  const [index, setIndex] = useState(initialIndex);\n\n  const refs = useRef<ItemRef[]>([]);\n\n  const setRef = useCallback((itemIndex: number, value: ItemRef) => {\n    refs.current[itemIndex] = value;\n  }, []);\n\n  const translateX = useSharedValue(\n    initialIndex * -(dimensions.width + emptySpaceWidth)\n  );\n\n  const currentIndex = useSharedValue(initialIndex);\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ translateX: rtl ? -translateX.value : translateX.value }],\n  }));\n\n  const changeIndex = useCallback(\n    (newIndex) => {\n      onIndexChange?.(newIndex);\n      setIndex(newIndex);\n    },\n    [onIndexChange, setIndex]\n  );\n\n  useAnimatedReaction(\n    () => currentIndex.value,\n    (newIndex) => runOnJS(changeIndex)(newIndex),\n    [currentIndex, changeIndex]\n  );\n\n  useEffect(() => {\n    translateX.value = index * -(dimensions.width + emptySpaceWidth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dimensions.width]);\n\n  useImperativeHandle(ref, () => ({\n    setIndex(newIndex: number, animated?: boolean) {\n      refs.current?.[index].reset(false);\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      if (animated) {\n        translateX.value = withSpring(\n          newIndex * -(dimensions.width + emptySpaceWidth),\n          springConfig\n        );\n      } else {\n        translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n      }\n    },\n    reset(animated = false) {\n      refs.current?.forEach((itemRef) => itemRef.reset(animated));\n    },\n  }));\n\n  useEffect(() => {\n    if (index >= data.length) {\n      const newIndex = data.length - 1;\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data?.length, dimensions.width]);\n\n  return (\n    <GestureHandlerRootView style={[styles.container, style]}>\n      <Animated.View style={[styles.rowContainer, animatedStyle]}>\n        {data.map((item: any, i) => {\n          const isFirst = i === 0;\n\n          const outOfLoopRenderRange =\n            !isLoop ||\n            (Math.abs(i - index) < data.length - (numToRender - 1) / 2 &&\n              Math.abs(i - index) > (numToRender - 1) / 2);\n\n          const hidden =\n            Math.abs(i - index) > (numToRender - 1) / 2 && outOfLoopRenderRange;\n\n          if (hidden) {\n            return null;\n          }\n\n          return (\n            // @ts-ignore\n            <ResizableImage\n              key={\n                keyExtractor\n                  ? keyExtractor(item, i)\n                  : item.id || item.key || item._id || item\n              }\n              {...{\n                translateX,\n                item,\n                currentIndex,\n                index: i,\n                isFirst,\n                isLast: i === data.length - 1,\n                length: data.length,\n                renderItem,\n                emptySpaceWidth,\n                doubleTapScale,\n                doubleTapInterval,\n                maxScale,\n                pinchEnabled,\n                swipeEnabled,\n                doubleTapEnabled,\n                disableTransitionOnScaledImage,\n                hideAdjacentImagesOnScaledImage,\n                disableVerticalSwipe,\n                disableSwipeUp,\n                loop: isLoop,\n                onScaleChange,\n                onScaleChangeRange,\n                setRef,\n                ...eventsCallbacks,\n                ...dimensions,\n              }}\n            />\n          );\n        })}\n      </Animated.View>\n    </GestureHandlerRootView>\n  );\n};\n\nconst Gallery = React.forwardRef(GalleryComponent) as <T extends any>(\n  p: GalleryProps<T> & { ref?: GalleryReactRef }\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, backgroundColor: 'black' },\n  rowContainer: { flex: 1 },\n  itemContainer: { position: 'absolute' },\n});\n\nexport default Gallery;\n"]}